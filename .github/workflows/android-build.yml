name: Android Release Build & Upload

on:
  push:
    branches:
      - main # change this to qa-builds if you want to test on a QA branch

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository code
      - uses: actions/checkout@v4

      # Setup Flutter with caching
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.2"
          cache: true

      # Cache pub dependencies and Flutter build cache
      - name: Cache Flutter packages and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
            build/
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}-${{ hashFiles('android/app/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}-
            ${{ runner.os }}-flutter-

      # Cache Firebase CLI
      - name: Cache Firebase CLI
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-firebase-cli-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-cli-

      # Install Firebase CLI (cached)
      - name: Install Firebase CLI
        run: |
          if ! command -v firebase &> /dev/null; then
            npm install -g firebase-tools
          fi

      # Install project dependencies
      - name: Install dependencies
        run: flutter pub get

      # Build release APK with optimizations
      - name: Build Android release APK
        run: |
          flutter build apk --release \
            --shrink \
            --obfuscate \
            --split-debug-info=build/app/outputs/symbols

      # Setup Firebase Service Account
      - name: Setup Firebase Service Account
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase-service-account.json
        env:
          GOOGLE_APPLICATION_CREDENTIALS: firebase-service-account.json

      # Upload APK to Firebase App Distribution
      - name: Upload to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app "1:916817013006:android:b0f1eff6c46fdeea9d8f5f" \
            --groups "testers" \
            --release-notes "Automated build from main branch - $(date '+%Y-%m-%d %H:%M:%S')"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: firebase-service-account.json
